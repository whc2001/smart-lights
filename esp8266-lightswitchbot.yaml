esphome:
  name: esp8266-lightswitchbot
  on_boot: # Drive the pins for button GND to LOW
    - output.turn_on: manual_button_gnd
    - output.turn_on: endstop_gnd

esp8266:
  board: d1_mini
  early_pin_init: true

logger:

api:
  encryption:
    key: "CHANGE_ME_HASS_API_TOKEN"

ota:
  password: "CHANGE_ME_OTA_PASSWORD"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "Esp8266-Lightswitchbot"
    password: "CHANGE_ME_FALLBACK_HOTSPOT_PASSWORD"

captive_portal:

output:
  - platform: esp8266_pwm
    id: servo_pwm
    pin: D3
    frequency: 50 Hz
  - platform: gpio
    id: builtin_led
    pin: D4
    inverted: true
  - platform: gpio
    id: manual_button_gnd
    pin: D0
    inverted: true
  - platform: gpio
    id: endstop_gnd
    pin: D6
    inverted: true

servo:
  - id: bot_servo
    output: servo_pwm
    auto_detach_time: 1s

binary_sensor:
  - platform: gpio
    id: manual_switch
    pin:
      number: D5
      mode:
        input: true
        pullup: true
      inverted: true
    internal: true
    filters:
      - delayed_on_off: 10ms
    on_click:
      - switch.toggle: light_switch
  - platform: gpio
    id: feedback_endstop
    pin:
      number: D7
      mode:
        input: true
        pullup: true
      inverted: true
    internal: true
    filters:
      - delayed_on_off: 10ms

switch:
  - platform: template
    id: light_switch
    name: "Room Light"
    device_class: switch
    icon: mdi:lightbulb
    optimistic: false
    lambda: return id(feedback_endstop).state;
    turn_on_action:
      - output.turn_on: builtin_led
      - servo.write:
          id: bot_servo
          level: 7%     # Change this to appropriate angle based on testing
    turn_off_action:
      - output.turn_off: builtin_led
      - servo.write:
          id: bot_servo
          level: -22%   # Change this to appropriate angle based on testing
